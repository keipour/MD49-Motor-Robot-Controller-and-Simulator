//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Configuration;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using Color = Microsoft.Xna.Framework.Color;

namespace RobX.Simulator.Properties {
    
    
    [CompilerGenerated()]
    [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class Settings : ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("32, 178, 170, 255")]
        public Color GroundColor {
            get {
                return ((Color)(this["GroundColor"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("211, 211, 211, 255")]
        public Color GridLineColor {
            get {
                return ((Color)(this["GridLineColor"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("255, 255, 255, 255")]
        public Color GridFontColor {
            get {
                return ((Color)(this["GridFontColor"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("255, 255, 0, 255")]
        public Color StatisticsFontColor {
            get {
                return ((Color)(this["StatisticsFontColor"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("255, 0, 0, 255")]
        public Color RobotTraceColor {
            get {
                return ((Color)(this["RobotTraceColor"]));
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("1371")]
        public string ServerPort {
            get {
                return ((string)(this["ServerPort"]));
            }
            set {
                this["ServerPort"] = value;
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("200")]
        public int UpdateRate {
            get {
                return ((int)(this["UpdateRate"]));
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("True")]
        public bool DrawGrids {
            get {
                return ((bool)(this["DrawGrids"]));
            }
            set {
                this["DrawGrids"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("True")]
        public bool DrawStatistics {
            get {
                return ((bool)(this["DrawStatistics"]));
            }
            set {
                this["DrawStatistics"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("True")]
        public bool DrawObstacles {
            get {
                return ((bool)(this["DrawObstacles"]));
            }
            set {
                this["DrawObstacles"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("True")]
        public bool DrawRobotTrace {
            get {
                return ((bool)(this["DrawRobotTrace"]));
            }
            set {
                this["DrawRobotTrace"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("499, 568")]
        public Size FormSize {
            get {
                return ((Size)(this["FormSize"]));
            }
            set {
                this["FormSize"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("False")]
        public bool KeepAspectRatio {
            get {
                return ((bool)(this["KeepAspectRatio"]));
            }
            set {
                this["KeepAspectRatio"] = value;
            }
        }
        
        [UserScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("0, 0")]
        public Point FormPosition {
            get {
                return ((Point)(this["FormPosition"]));
            }
            set {
                this["FormPosition"] = value;
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("1")]
        public double DefaultSimulationSpeed {
            get {
                return ((double)(this["DefaultSimulationSpeed"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("255, 0, 0, 255")]
        public Color SimulationSpeedColor {
            get {
                return ((Color)(this["SimulationSpeedColor"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("Up")]
        public Keys ForwardKey {
            get {
                return ((Keys)(this["ForwardKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("Down")]
        public Keys BackwardKey {
            get {
                return ((Keys)(this["BackwardKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("Right")]
        public Keys RotateClockwiseKey {
            get {
                return ((Keys)(this["RotateClockwiseKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("Left")]
        public Keys RotateCounterClockwiseKey {
            get {
                return ((Keys)(this["RotateCounterClockwiseKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("ShiftKey")]
        public Keys StopKey {
            get {
                return ((Keys)(this["StopKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("F10")]
        public Keys GlobalStopKey {
            get {
                return ((Keys)(this["GlobalStopKey"]));
            }
        }
        
        [ApplicationScopedSetting()]
        [DebuggerNonUserCode()]
        [DefaultSettingValue("F12")]
        public Keys ToggleKeyboardControl {
            get {
                return ((Keys)(this["ToggleKeyboardControl"]));
            }
        }
    }
}
